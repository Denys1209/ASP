@model MovieCatalog.MVCView.ViewModels.ActorsViewModel

@{
    ViewData["Title"] = "Actors";
}

<div class="text-center">
    <h1>Actors</h1>
    <a class="btn btn-primary" asp-action="Create">Create</a>

    <form asp-action="Filter" method="get" asp-all-route-data="@Model.ToDictionaryParameters()">
        <div>
            <label>Sort by</label>
            @Html.DropDownListFor(x => x.SortColumn, Model.SortColumns)
        </div>

        <div>
            <label>Sort order</label>
            @Html.DropDownListFor(x => x.SortDirection, Model.SortDirections)
        </div>

        <div>
            <label>Page size</label>
            @Html.TextBoxFor(x => x.PageSize, new { type = "number", min = "1", max = "100" })
        </div>

        <div>
            <label>Page number</label>
            @Html.TextBoxFor(x => x.CurrentPage, new { type = "number", min = "1", max = Model.TotalPages })
        </div>

        <div>
            <label>Search</label>
            @Html.TextBoxFor(x => x.SearchTerm)
        </div>

        <button type="submit" class="btn btn-primary">
            Filter
        </button>
    </form>

    <table class="table">
        <thead>
        <tr>
            <td>First Name</td>
            <td>Last Name</td>
            <td>Date of Birth</td>
            <td>Actions</td>
        </tr>
        </thead>
        @foreach (var actor in Model.Actors)
        {
            <tr>
                <td>@actor.FirstName</td>
                <td>@actor.LastName</td>
                <td>@actor.DateOfBirth.ToString("d")</td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@actor.Id">Update</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@actor.Id">Delete</a>
                </td>
            </tr>
        }
    </table>
</div>